// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ErrorProto.proto

package com.ppdai.framework.raptor.exception;

public final class ErrorProto {
    private ErrorProto() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public interface ErrorMessageOrBuilder extends
            // @@protoc_insertion_point(interface_extends:com.ppdai.framework.raptor.exception.ErrorMessage)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>int32 code = 1;</code>
         */
        int getCode();

        /**
         * <code>string message = 2;</code>
         */
        String getMessage();

        /**
         * <code>string message = 2;</code>
         */
        com.google.protobuf.ByteString
        getMessageBytes();

        /**
         * <code>map&lt;string, string&gt; attachments = 3;</code>
         */
        int getAttachmentsCount();

        /**
         * <code>map&lt;string, string&gt; attachments = 3;</code>
         */
        boolean containsAttachments(
                String key);

        /**
         * Use {@link #getAttachmentsMap()} instead.
         */
        @Deprecated
        java.util.Map<String, String>
        getAttachments();

        /**
         * <code>map&lt;string, string&gt; attachments = 3;</code>
         */
        java.util.Map<String, String>
        getAttachmentsMap();

        /**
         * <code>map&lt;string, string&gt; attachments = 3;</code>
         */

        String getAttachmentsOrDefault(
                String key,
                String defaultValue);

        /**
         * <code>map&lt;string, string&gt; attachments = 3;</code>
         */

        String getAttachmentsOrThrow(
                String key);
    }

    /**
     * Protobuf type {@code com.ppdai.framework.raptor.exception.ErrorMessage}
     */
    public static final class ErrorMessage extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:com.ppdai.framework.raptor.exception.ErrorMessage)
            ErrorMessageOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use ErrorMessage.newBuilder() to construct.
        private ErrorMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private ErrorMessage() {
            code_ = 0;
            message_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private ErrorMessage(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {

                            code_ = input.readInt32();
                            break;
                        }
                        case 18: {
                            String s = input.readStringRequireUtf8();

                            message_ = s;
                            break;
                        }
                        case 26: {
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                attachments_ = com.google.protobuf.MapField.newMapField(
                                        AttachmentsDefaultEntryHolder.defaultEntry);
                                mutable_bitField0_ |= 0x00000004;
                            }
                            com.google.protobuf.MapEntry<String, String>
                                    attachments__ = input.readMessage(
                                    AttachmentsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                            attachments_.getMutableMap().put(
                                    attachments__.getKey(), attachments__.getValue());
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ErrorProto.internal_static_com_ppdai_framework_raptor_exception_ErrorMessage_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
                int number) {
            switch (number) {
                case 3:
                    return internalGetAttachments();
                default:
                    throw new RuntimeException(
                            "Invalid map field number: " + number);
            }
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ErrorProto.internal_static_com_ppdai_framework_raptor_exception_ErrorMessage_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            ErrorMessage.class, Builder.class);
        }

        private int bitField0_;
        public static final int CODE_FIELD_NUMBER = 1;
        private int code_;

        /**
         * <code>int32 code = 1;</code>
         */
        public int getCode() {
            return code_;
        }

        public static final int MESSAGE_FIELD_NUMBER = 2;
        private volatile Object message_;

        /**
         * <code>string message = 2;</code>
         */
        public String getMessage() {
            Object ref = message_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                message_ = s;
                return s;
            }
        }

        /**
         * <code>string message = 2;</code>
         */
        public com.google.protobuf.ByteString
        getMessageBytes() {
            Object ref = message_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                message_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int ATTACHMENTS_FIELD_NUMBER = 3;

        private static final class AttachmentsDefaultEntryHolder {
            static final com.google.protobuf.MapEntry<
                    String, String> defaultEntry =
                    com.google.protobuf.MapEntry
                            .<String, String>newDefaultInstance(
                                    ErrorProto.internal_static_com_ppdai_framework_raptor_exception_ErrorMessage_AttachmentsEntry_descriptor,
                                    com.google.protobuf.WireFormat.FieldType.STRING,
                                    "",
                                    com.google.protobuf.WireFormat.FieldType.STRING,
                                    "");
        }

        private com.google.protobuf.MapField<
                String, String> attachments_;

        private com.google.protobuf.MapField<String, String>
        internalGetAttachments() {
            if (attachments_ == null) {
                return com.google.protobuf.MapField.emptyMapField(
                        AttachmentsDefaultEntryHolder.defaultEntry);
            }
            return attachments_;
        }

        public int getAttachmentsCount() {
            return internalGetAttachments().getMap().size();
        }

        /**
         * <code>map&lt;string, string&gt; attachments = 3;</code>
         */

        public boolean containsAttachments(
                String key) {
            if (key == null) {
                throw new NullPointerException();
            }
            return internalGetAttachments().getMap().containsKey(key);
        }

        /**
         * Use {@link #getAttachmentsMap()} instead.
         */
        @Deprecated
        public java.util.Map<String, String> getAttachments() {
            return getAttachmentsMap();
        }

        /**
         * <code>map&lt;string, string&gt; attachments = 3;</code>
         */

        public java.util.Map<String, String> getAttachmentsMap() {
            return internalGetAttachments().getMap();
        }

        /**
         * <code>map&lt;string, string&gt; attachments = 3;</code>
         */

        public String getAttachmentsOrDefault(
                String key,
                String defaultValue) {
            if (key == null) {
                throw new NullPointerException();
            }
            java.util.Map<String, String> map =
                    internalGetAttachments().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
        }

        /**
         * <code>map&lt;string, string&gt; attachments = 3;</code>
         */

        public String getAttachmentsOrThrow(
                String key) {
            if (key == null) {
                throw new NullPointerException();
            }
            java.util.Map<String, String> map =
                    internalGetAttachments().getMap();
            if (!map.containsKey(key)) {
                throw new IllegalArgumentException();
            }
            return map.get(key);
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) {
                return true;
            }
            if (isInitialized == 0) {
                return false;
            }

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (code_ != 0) {
                output.writeInt32(1, code_);
            }
            if (!getMessageBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, message_);
            }
            com.google.protobuf.GeneratedMessageV3
                    .serializeStringMapTo(
                            output,
                            internalGetAttachments(),
                            AttachmentsDefaultEntryHolder.defaultEntry,
                            3);
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) {
                return size;
            }

            size = 0;
            if (code_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(1, code_);
            }
            if (!getMessageBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, message_);
            }
            for (java.util.Map.Entry<String, String> entry
                    : internalGetAttachments().getMap().entrySet()) {
                com.google.protobuf.MapEntry<String, String>
                        attachments__ = AttachmentsDefaultEntryHolder.defaultEntry.newBuilderForType()
                        .setKey(entry.getKey())
                        .setValue(entry.getValue())
                        .build();
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, attachments__);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ErrorMessage)) {
                return super.equals(obj);
            }
            ErrorMessage other = (ErrorMessage) obj;

            boolean result = true;
            result = result && (getCode()
                    == other.getCode());
            result = result && getMessage()
                    .equals(other.getMessage());
            result = result && internalGetAttachments().equals(
                    other.internalGetAttachments());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + CODE_FIELD_NUMBER;
            hash = (53 * hash) + getCode();
            hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
            hash = (53 * hash) + getMessage().hashCode();
            if (!internalGetAttachments().getMap().isEmpty()) {
                hash = (37 * hash) + ATTACHMENTS_FIELD_NUMBER;
                hash = (53 * hash) + internalGetAttachments().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static ErrorMessage parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static ErrorMessage parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static ErrorMessage parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static ErrorMessage parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static ErrorMessage parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static ErrorMessage parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static ErrorMessage parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static ErrorMessage parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static ErrorMessage parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static ErrorMessage parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static ErrorMessage parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static ErrorMessage parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(ErrorMessage prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code com.ppdai.framework.raptor.exception.ErrorMessage}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:com.ppdai.framework.raptor.exception.ErrorMessage)
                ErrorMessageOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ErrorProto.internal_static_com_ppdai_framework_raptor_exception_ErrorMessage_descriptor;
            }

            @SuppressWarnings({"rawtypes"})
            protected com.google.protobuf.MapField internalGetMapField(
                    int number) {
                switch (number) {
                    case 3:
                        return internalGetAttachments();
                    default:
                        throw new RuntimeException(
                                "Invalid map field number: " + number);
                }
            }

            @SuppressWarnings({"rawtypes"})
            protected com.google.protobuf.MapField internalGetMutableMapField(
                    int number) {
                switch (number) {
                    case 3:
                        return internalGetMutableAttachments();
                    default:
                        throw new RuntimeException(
                                "Invalid map field number: " + number);
                }
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ErrorProto.internal_static_com_ppdai_framework_raptor_exception_ErrorMessage_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                ErrorMessage.class, Builder.class);
            }

            // Construct using com.ppdai.framework.raptor.exception.ErrorProto.ErrorMessage.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                code_ = 0;

                message_ = "";

                internalGetMutableAttachments().clear();
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ErrorProto.internal_static_com_ppdai_framework_raptor_exception_ErrorMessage_descriptor;
            }

            public ErrorMessage getDefaultInstanceForType() {
                return ErrorMessage.getDefaultInstance();
            }

            public ErrorMessage build() {
                ErrorMessage result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public ErrorMessage buildPartial() {
                ErrorMessage result = new ErrorMessage(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.code_ = code_;
                result.message_ = message_;
                result.attachments_ = internalGetAttachments();
                result.attachments_.makeImmutable();
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof ErrorMessage) {
                    return mergeFrom((ErrorMessage) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(ErrorMessage other) {
                if (other == ErrorMessage.getDefaultInstance()) {
                    return this;
                }
                if (other.getCode() != 0) {
                    setCode(other.getCode());
                }
                if (!other.getMessage().isEmpty()) {
                    message_ = other.message_;
                    onChanged();
                }
                internalGetMutableAttachments().mergeFrom(
                        other.internalGetAttachments());
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                ErrorMessage parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (ErrorMessage) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private int code_;

            /**
             * <code>int32 code = 1;</code>
             */
            public int getCode() {
                return code_;
            }

            /**
             * <code>int32 code = 1;</code>
             */
            public Builder setCode(int value) {

                code_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>int32 code = 1;</code>
             */
            public Builder clearCode() {

                code_ = 0;
                onChanged();
                return this;
            }

            private Object message_ = "";

            /**
             * <code>string message = 2;</code>
             */
            public String getMessage() {
                Object ref = message_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    message_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>string message = 2;</code>
             */
            public com.google.protobuf.ByteString
            getMessageBytes() {
                Object ref = message_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    message_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string message = 2;</code>
             */
            public Builder setMessage(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                message_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string message = 2;</code>
             */
            public Builder clearMessage() {

                message_ = getDefaultInstance().getMessage();
                onChanged();
                return this;
            }

            /**
             * <code>string message = 2;</code>
             */
            public Builder setMessageBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                message_ = value;
                onChanged();
                return this;
            }

            private com.google.protobuf.MapField<
                    String, String> attachments_;

            private com.google.protobuf.MapField<String, String>
            internalGetAttachments() {
                if (attachments_ == null) {
                    return com.google.protobuf.MapField.emptyMapField(
                            AttachmentsDefaultEntryHolder.defaultEntry);
                }
                return attachments_;
            }

            private com.google.protobuf.MapField<String, String>
            internalGetMutableAttachments() {
                onChanged();
                ;
                if (attachments_ == null) {
                    attachments_ = com.google.protobuf.MapField.newMapField(
                            AttachmentsDefaultEntryHolder.defaultEntry);
                }
                if (!attachments_.isMutable()) {
                    attachments_ = attachments_.copy();
                }
                return attachments_;
            }

            public int getAttachmentsCount() {
                return internalGetAttachments().getMap().size();
            }

            /**
             * <code>map&lt;string, string&gt; attachments = 3;</code>
             */

            public boolean containsAttachments(
                    String key) {
                if (key == null) {
                    throw new NullPointerException();
                }
                return internalGetAttachments().getMap().containsKey(key);
            }

            /**
             * Use {@link #getAttachmentsMap()} instead.
             */
            @Deprecated
            public java.util.Map<String, String> getAttachments() {
                return getAttachmentsMap();
            }

            /**
             * <code>map&lt;string, string&gt; attachments = 3;</code>
             */

            public java.util.Map<String, String> getAttachmentsMap() {
                return internalGetAttachments().getMap();
            }

            /**
             * <code>map&lt;string, string&gt; attachments = 3;</code>
             */

            public String getAttachmentsOrDefault(
                    String key,
                    String defaultValue) {
                if (key == null) {
                    throw new NullPointerException();
                }
                java.util.Map<String, String> map =
                        internalGetAttachments().getMap();
                return map.containsKey(key) ? map.get(key) : defaultValue;
            }

            /**
             * <code>map&lt;string, string&gt; attachments = 3;</code>
             */

            public String getAttachmentsOrThrow(
                    String key) {
                if (key == null) {
                    throw new NullPointerException();
                }
                java.util.Map<String, String> map =
                        internalGetAttachments().getMap();
                if (!map.containsKey(key)) {
                    throw new IllegalArgumentException();
                }
                return map.get(key);
            }

            public Builder clearAttachments() {
                internalGetMutableAttachments().getMutableMap()
                        .clear();
                return this;
            }

            /**
             * <code>map&lt;string, string&gt; attachments = 3;</code>
             */

            public Builder removeAttachments(
                    String key) {
                if (key == null) {
                    throw new NullPointerException();
                }
                internalGetMutableAttachments().getMutableMap()
                        .remove(key);
                return this;
            }

            /**
             * Use alternate mutation accessors instead.
             */
            @Deprecated
            public java.util.Map<String, String>
            getMutableAttachments() {
                return internalGetMutableAttachments().getMutableMap();
            }

            /**
             * <code>map&lt;string, string&gt; attachments = 3;</code>
             */
            public Builder putAttachments(
                    String key,
                    String value) {
                if (key == null) {
                    throw new NullPointerException();
                }
                if (value == null) {
                    throw new NullPointerException();
                }
                internalGetMutableAttachments().getMutableMap()
                        .put(key, value);
                return this;
            }

            /**
             * <code>map&lt;string, string&gt; attachments = 3;</code>
             */

            public Builder putAllAttachments(
                    java.util.Map<String, String> values) {
                internalGetMutableAttachments().getMutableMap()
                        .putAll(values);
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:com.ppdai.framework.raptor.exception.ErrorMessage)
        }

        // @@protoc_insertion_point(class_scope:com.ppdai.framework.raptor.exception.ErrorMessage)
        private static final ErrorMessage DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new ErrorMessage();
        }

        public static ErrorMessage getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<ErrorMessage>
                PARSER = new com.google.protobuf.AbstractParser<ErrorMessage>() {
            public ErrorMessage parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new ErrorMessage(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<ErrorMessage> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<ErrorMessage> getParserForType() {
            return PARSER;
        }

        public ErrorMessage getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_com_ppdai_framework_raptor_exception_ErrorMessage_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_com_ppdai_framework_raptor_exception_ErrorMessage_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_com_ppdai_framework_raptor_exception_ErrorMessage_AttachmentsEntry_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_com_ppdai_framework_raptor_exception_ErrorMessage_AttachmentsEntry_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        String[] descriptorData = {
                "\n\020ErrorProto.proto\022$com.ppdai.framework." +
                        "raptor.exception\"\273\001\n\014ErrorMessage\022\014\n\004cod" +
                        "e\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\022X\n\013attachments\030" +
                        "\003 \003(\0132C.com.ppdai.framework.raptor.excep" +
                        "tion.ErrorMessage.AttachmentsEntry\0322\n\020At" +
                        "tachmentsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001" +
                        "(\t:\0028\001b\006proto3"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                        }, assigner);
        internal_static_com_ppdai_framework_raptor_exception_ErrorMessage_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_com_ppdai_framework_raptor_exception_ErrorMessage_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_com_ppdai_framework_raptor_exception_ErrorMessage_descriptor,
                new String[]{"Code", "Message", "Attachments",});
        internal_static_com_ppdai_framework_raptor_exception_ErrorMessage_AttachmentsEntry_descriptor =
                internal_static_com_ppdai_framework_raptor_exception_ErrorMessage_descriptor.getNestedTypes().get(0);
        internal_static_com_ppdai_framework_raptor_exception_ErrorMessage_AttachmentsEntry_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_com_ppdai_framework_raptor_exception_ErrorMessage_AttachmentsEntry_descriptor,
                new String[]{"Key", "Value",});
    }

    // @@protoc_insertion_point(outer_class_scope)
}
